plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
	id 'java'
}

group = 'com.team17'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.projectlombok:lombok:1.18.24'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor "org.projectlombok:lombok:1.18.24"
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	// spring-restdocs-asciidoctor 설정 : https://velog.io/@gwichanlee/Spring-Rest-Docs

	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.google.code.gson:gson'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"
	testCompileOnly 'org.projectlombok:lombok:1.18.24' // 테스트 의존성 추가
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24' // 테스트 의존성 추가
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	configurations "asciidoctorExtensions"
	inputs.dir snippetsDir
	dependsOn test
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("${asciidoctor.outputDir}")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

bootJar {
	dependsOn copyDocument
	from ("${asciidoctor.outputDir}") {  // (10-2)
		into 'static/docs'     // (10-3)
	}
}